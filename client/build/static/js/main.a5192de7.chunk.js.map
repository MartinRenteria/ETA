{"version":3,"sources":["components/Login/Login.js","components/Signup/Signup.js","components/Navbar/NavButton.js","utils/api.js","store/actions.js","store/index.js","utils/auth.js","components/RegistrationForm.js","App.js","registerServiceWorker.js","index.js"],"names":["Login","Form","Group","controlId","Label","Control","type","placeholder","Text","className","Check","label","Button","variant","Signup","as","rows","NavButton","Navbar","bg","this","axios","create","name","value","defaults","headers","common","userData","post","LOGIN_USER","LOGOUT_USER","StoreContext","createContext","userAuth","Provider","reducer","state","payload","StoreProvider","children","useReducer","store","dispatch","useStoreContext","useContext","setAuthToken","token","storeAuthToken","applyAuthToken","jwt_decode","undefined","localStorage","setItem","removeItem","api","setHeader","RegistrationForm","emailRef","useRef","passwordRef","login","credentials","a","data","tokenString","user","useLogin","handleSubmit","e","preventDefault","email","current","password","console","log","register","response","onSubmit","ref","App","useState","isDone","setIsDone","history","useHistory","useEffect","jwtToken","currentTime","Date","now","invalidate","push","exp","authenticated","authCheck","useAuthTokenStore","isAuthenticated","useIsAuthenticated","Jumbotron","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","reactContentRoot","document","getElementById","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a5192de7.chunk.js","sourcesContent":["import React from 'react';\nimport {Form, Button} from \"react-bootstrap\"\n\nexport default function Login () {\n    return (\n        <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Log In\n            </Button>\n            <Button variant=\"\" type=\"submit\">\n                Sign up\n            </Button>\n        </Form>\n    )\n}","import React from 'react';\nimport {Form, Button} from \"react-bootstrap\"\n\nexport default function Signup() {\n    return (\n        <Form>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control type=\"Text\" placeholder=\"Enter First Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control type=\"Text\" placeholder=\"Enter Last Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Enter Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Select A Role for Employee</Form.Label>\n                <Form.Control as=\"select\">\n                    <option>Role 1</option>\n                    <option>Role 2</option>\n                    <option>Role 3</option>\n                    <option>Role 4</option>\n                    <option>Role 5</option>\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Other Infomation</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Sign Up\n            </Button>\n\n            <Button variant=\"\" type=\"submit\">\n                Log In\n            </Button>\n        </Form>\n    )\n}","import React from 'react';\nimport { Navbar, Button} from \"react-bootstrap\"\n\nexport default function NavButton () {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Button variant=\"outline-info\" className=\"ml-2\" >Log In/Out</Button>\n\n            <Button variant=\"outline-info\" className=\"ml-2\">Request Form</Button>\n\n            <Button variant=\"outline-info\" className=\"ml-2\">View Time Clock History</Button>\n        </Navbar>\n    )\n}","import axios from \"axios\";\n\nclass API {\n\n    axios;\n\n    constructor() {\n\n        this.axios = axios.create();\n\n    }\n\n    /**\n     * @param {String} name \n     * @param {String} value \n     */\n    setHeader( name, value ) {\n\n        if( value )\n\n            this.axios.defaults.headers.common[name] = value;\n\n        else\n\n            delete this.axios.defaults.headers.common[name];\n\n    }\n\n    /**\n     * @param {object} userData \n     * @param {String} userData.email\n     * @param {String} userData.password\n     * \n     * @returns {Promise}\n     */\n    register( userData ) {\n\n        \n\n        return this.axios.post(\"/api/register\", userData);\n\n    }\n\n\n    /**\n     * @param {object} userData \n     * @param {String} userData.email\n     * @param {String} userData.password\n     * \n     * @returns {Promise}\n     */\n    login( userData ) {\n\n        return this.axios.post(\"/api/login\", userData);\n\n    }\n\n    authenticated() {\n\n        return this.axios.post(\"/api/authenticated\");\n\n    }\n\n}\n\nexport default new API();","export const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";","import React,{ createContext, useContext, useReducer } from \"react\";\n\nimport {\n    LOGIN_USER,\n    LOGOUT_USER\n} from \"./actions\";\n\nconst StoreContext = createContext({\n    userAuth: {},\n});\n\nconst { Provider } = StoreContext;\n\nconst reducer = ( state, { type, payload } ) => {\n\n    switch( type ) {\n        case LOGIN_USER:\n\n            return { ...state, userAuth: payload };\n\n        case LOGOUT_USER:\n\n            return { ...state, userAuth: {} };\n\n        default:\n            return state;\n    }\n\n}\n\nexport const StoreProvider = ( { children } ) => {\n\n    const [ store, dispatch ] = useReducer( reducer, {\n        userAuth: {}\n    } );\n\n    return <Provider value={[store, dispatch]}>{ children }</Provider>\n\n}\n\nexport const useStoreContext = () => {\n\n    return useContext( StoreContext );\n\n}","import { useEffect, useState } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport { useHistory } from \"react-router-dom\";\n\nimport api from \"./api\";\nimport { useStoreContext } from \"../store\";\nimport { LOGIN_USER, LOGOUT_USER } from \"../store/actions\";\n\nconst setAuthToken = token => {\n\n    storeAuthToken( token );\n    applyAuthToken( token );\n\n    return token ? jwt_decode(token) : undefined;\n\n}\n\nconst storeAuthToken = token => {\n\n    token\n\n        ? localStorage.setItem(\"jwtToken\", token)\n        \n        : localStorage.removeItem( \"jwtToken\" );\n\n}\n\nconst applyAuthToken = token => {\n\n    token\n\n        // Apply authorization token to every request if logged in\n        ? api.setHeader( \"Authorization\", token )\n\n        // Delete auth header\n        : api.setHeader( \"Authorization\", false );\n\n}\n\nexport const useAuthTokenStore = () => {\n\n    const [ ,dispatch ] = useStoreContext();\n    const [ isDone, setIsDone ] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n\n        if( isDone ) return;\n\n        // Check for token to keep user logged in\n        if ( !localStorage.jwtToken ) {\n            setIsDone( true );\n            return;\n        }\n            \n        // Set auth token header auth\n        const tokenString = localStorage.jwtToken;\n        \n        // Decode token and get user info and exp\n        const token = jwt_decode(tokenString);\n        \n        // Check for expired token\n        const currentTime = Date.now() / 1000; // to get in milliseconds\n\n        const invalidate = () => {\n\n            // Logout user\n            setAuthToken( false );\n            dispatch({ type: LOGOUT_USER });\n            \n            // Redirect to login\n            history.push(\"/\");\n\n        }\n        \n        if (token.exp < currentTime) {\n            \n            invalidate();\n\n        } else {\n\n            applyAuthToken(tokenString);\n\n            const authCheck = async () => {\n\n                let user;\n\n                try {\n\n                    const { data } = await api.authenticated();\n\n                    user = data;\n\n                } catch(res) {\n                    \n                    invalidate();\n\n                }\n\n                if( user ) dispatch({ type: LOGIN_USER, payload: { token, user } });\n\n                setIsDone( true );\n\n            }\n\n            authCheck();\n\n        }\n\n    }, [ dispatch, history, isDone ])\n\n    return isDone;\n\n}\n\nexport const useIsAuthenticated = () => {\n\n    const [ { userAuth: { token } } ] = useStoreContext();\n\n    return token && token.exp > Date.now() / 1000;\n\n}\n\nexport const useAuthenticatedUser = () => {\n\n    const [ { userAuth: { user } } ] = useStoreContext();\n\n    return user;\n\n}\n\nexport const useLogin = () => {\n\n    const [ ,dispatch ] = useStoreContext();\n\n    return async ( credentials ) => {\n    \n        const { data: { token: tokenString, user } } = await api.login( credentials );\n\n        const token = setAuthToken( tokenString );\n\n        dispatch({ type: LOGIN_USER, payload: { token, user } });\n\n        return token;\n        \n    }\n    \n}\n\nexport const useLogout = () => {\n\n    const [ ,dispatch ] = useStoreContext();\n    const history = useHistory();\n\n    return () => {\n\n        setAuthToken( false );\n        dispatch({ type: LOGOUT_USER });\n\n        history.push(\"/\");\n\n    }\n    \n}","import React, {useRef} from \"react\"\r\nimport { useLogin } from \"../utils/auth\";\r\nimport api from \"../utils/api\";\r\n\r\nfunction RegistrationForm() {\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n\r\n    // Get the helper login function from the `useLogin` hook.\r\n    const login = useLogin();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n\r\n        console.log(email, password);\r\n        try {\r\n\r\n            // Register the user.\r\n            await api.register({ email, password });\r\n\r\n            // User has been successfully registered, now log them in with the same information.\r\n            await login({ email, password });\r\n\r\n            // User has been successfully registered, logged in and added to state. Perform any additional actions you need here such as redirecting to a new page.\r\n\r\n        } catch(err) {\r\n\r\n             // Handle error responses from the API. This will include\r\n             if( err.response && err.response.data )\r\n             { console.log(err.response.data);\r\n        } else{\r\n            console.log(err);\r\n        }\r\n             \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Register</h2>\r\n            <input type=\"text\" ref={emailRef} placeholder=\"Your email\" /><br />\r\n            <input type=\"password\" ref={passwordRef} placeholder=\"Your password\" /><br />\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default RegistrationForm;","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport Login from \"../src/components/Login/Login\"\nimport Signup from '../src/components/Signup/Signup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavButton from '../src/components/Navbar/NavButton';\nimport { useAuthTokenStore, useIsAuthenticated } from \"./utils/auth\";\nimport RegistrationForm from '../src/components/RegistrationForm';\nimport { BrowserRouter} from \"react-router-dom\";;\n\nfunction App() {\n\n  useAuthTokenStore();\n\n  const isAuthenticated = useIsAuthenticated();\n\n  return (\n    <BrowserRouter>\n    \n    <Jumbotron className=\"m-0 p-0\">\n      <NavButton/>\n\n      <h1>Login</h1>\n      <Login />\n\n      <br></br>\n      <h1>Sign up</h1>\n      <Signup/>\n\n      {!isAuthenticated &&  <RegistrationForm />}\n      \n    </Jumbotron>\n    </BrowserRouter>\n\n  )\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been pre-cached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { StoreProvider } from \"./store\";\n\nconst reactContentRoot = document.getElementById(\"root\");\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StoreProvider>\n\t\t\t<App />\n\t\t</StoreProvider>\n\t</React.StrictMode>,\n\treactContentRoot\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}